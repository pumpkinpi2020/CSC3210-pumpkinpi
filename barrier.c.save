/*	barrier.c
*	...	illustrates	the	use	of	the	OpenMP	barrier	command,
*	 using	the	commandline	to	control	the	number	of	threads...
*
*	Joel	Adams,	Calvin	College,	May	2013.
*
*	Usage:	./barrier	[numThreads]
*	
*	Exercise:
*	- Compile	&	run	several	times,	noting	interleaving	of	outputs.
*	- Uncomment	the	barrier	directive,	recompile,	rerun,
*				and	note	the	change	in	the	outputs.
*/
#include <stdio.h>
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
#include <omp.h>
#include <stdlib.h>
nt main(int argc,	char** argv)	{
				printf("\n");
				if (argc	> 1)	{
								omp_set_num_threads(	atoi(argv[1])	);
				}
				#pragma	omp	parallel	
				{
								int id	= omp_get_thread_num();
								int numThreads	= omp_get_num_threads();
								printf("Thread	%d	of	%d	is	BEFORE	the	barrier.\n",	id,	numThreads);
//								#pragma	omp	barrier	
								printf("Thread	%d	of	%d	is	AFTER	the	barrier.\n",	id,	numThreads);
				}
				printf("\n");
				return 0;
